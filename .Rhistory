shiny::runApp()
load("./data/data1.RData")
load("./data/finaldata.RData")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
load("/Users/zhongming/Desktop/assignment/data visulization/final project/H1B.Rdata")
runApp('~/Documents/GitHub/shinny app/app')
runApp()
runApp()
load("./H1B.RData")
runApp()
# Define server
load("./H1B.RData")
finaldata
runApp()
runApp()
runApp()
# Define server
load("./H1B.RData")
finaldata=finaldata[c(2,6,8,9,11)]
summary(data2)
runApp()
summary(data2)
# Define server
load("./H1B.RData")
names(dat2)
names(data2)
runApp()
# Define server
load("./H1B.RData")
tmp <- data2%>%group_by(Industry.Title)%>%summarise(Application=sum(Application))%>%arrange(desc(Application))
tmp
tmp <- data2%>%group_by(Industry.Title)%>%summarise(Application=sum(Application))%>%arrange(desc(Application))
temp
tmp
data2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Define server
load("./H1B.RData")
write.csv(data1,file="data1.csv")
write.csv(data2,file="data2.csv")
data1=read.csv(".\data\data1.csv")
data1=read.csv("./data/data1.csv")
write.csv(finaldata,file="finaldata.csv")
runApp()
runApp()
# Define server
finaldata=read.csv("./data/finaldata.csv")
summary(finaldata)
names(finaldata)
runApp()
data1=read.csv("./data/data1.csv")
library(dplyr)
load("/Users/zhongming/Downloads/final.data.2019.Rdata")
zip_codes_states <- read.csv("~/Downloads/zip_codes_states.csv")
zip_codes_states<-zip_codes_states[1:3]
names(zip_codes_states)[1]="ZIP"
zip_codes_states$ZIP=as.character(zip_codes_states$ZIP)
#total data without geolocation
finaldata=left_join(final.data.2019,zip_codes_states,by="ZIP")
#total clean data
cleantable <- finaldata %>%
select(
Employer = Employer,
State = State,
Zipcode = ZIP,
City=City,
Total_Approval=Total.Approvals,
Total_Application=Total.Applicants,
Industry=Industry.Title,
Lat = latitude,
Long = longitude
)
#zipcode total application
data1<-cleantable%>%group_by(Zipcode,State,City)%>%summarise(Application=sum(Total_Application),Approval=sum(Total_Approval),Lat=mean(Lat),Long=mean(Long))%>%na.omit()
#total application in industry
data2<-finaldata%>%group_by(Industry.Title)%>%summarise(Application=sum(Total.Applicants),Approval=sum(Total.Approvals))
#top 10 application comapny
#not easy to hash
View(data1)
View(finaldata)
View(data1)
View(data2)
data1=read.csv("./data/data1.csv")
data1=read.csv("./data/data1.csv")
summary(data1)
summary(finaldata)
finaldata=finaldata[c(3,7,9,10,12)]
summary(finaldata)
# Define server
finaldata=read.csv("./data/finaldata.csv")
finaldata=finaldata[c(3,7,9,10,12)]
summary(finaldata)
#total clean data
cleantable <- finaldata %>%
select(
Employer = Employer,
State = State,
Zipcode = ZIP,
City=City,
Total_Approval=Total.Approvals,
Total_Application=Total.Applicants,
Industry=Industry.Title,
Lat = latitude,
Long = longitude
)
# Define server
finaldata=read.csv("./data/finaldata.csv")
#total clean data
cleantable <- finaldata %>%
select(
Employer = Employer,
State = State,
Zipcode = ZIP,
City=City,
Total_Approval=Total.Approvals,
Total_Application=Total.Applicants,
Industry=Industry.Title,
Lat = latitude,
Long = longitude
)
#zipcode total application
data1<-cleantable%>%group_by(Zipcode,State,City)%>%summarise(Application=sum(Total_Application),Approval=sum(Total_Approval),Lat=mean(Lat),Long=mean(Long))%>%na.omit()
data1
cleantable
#zipcode total application
data1<-cleantable%>%group_by(Zipcode,State,City)%>%summarise(Application=sum(Total_Application),Approval=sum(Total_Approval),Lat=mean(Lat),Long=mean(Long))
data1
#zipcode total application
data1<-cleantable%>%group_by(Zipcode,State,City)%>%summarise(Application=sum(Total_Application),Approval=sum(Total_Approval),Lat=mean(Lat),Long=mean(Long))
data1
load("/Users/zhongming/Downloads/final.data.2019.Rdata")
data1
cleantable%>%group_by(Zipcode,State,City)%>%summarise(Application=sum(Total_Application),Approval=sum(Total_Approval),Lat=mean(Lat),Long=mean(Long))
cleantable%>%group_by(Zipcode,State,City)
cleantable%>%group_by(Zipcode,State,City)%>%summarise(Application=sum(Total_Application),Approval=sum(Total_Approval),Lat=mean(Lat),Long=mean(Long))
